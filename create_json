import json
import sys
import re
import requests

# Open the input file from Iozone
# Don't continue if no arguments passed into script
if len(sys.argv) == 1:
    quit()

# Debug len check
# print(len(sys.argv))


filename = sys.argv[1]
fp = open(filename, 'r')
outputfilename = "output.json"
fo = open(outputfilename, 'w')


if len(sys.argv) <= 2:
    volume = 'default'
else:
    volume= sys.argv[2]

if len(sys.argv) <= 3:
    host = 'default'
else:
    host = sys.argv[3]

if len(sys.argv) <= 4:
    logging_target = 'http://localhost:8888'
else:
    logging_target = sys.argv[4]
    
   

#   kB  reclen    write  rewrite    read    reread    read     write     read   rewrite      read   fwrite frewrite    fread  freread
#Get to the proper line of the file

pattern = re.compile(". kB. reclen")
data_time = False
print(pattern)
test = "t"
output_json = test
index = 0
for line in fp:
    if data_time:
        data = line.split()
        if (len(data) > 13) :
            json_export = {'ident':'ioz','ioz_ahost': host,'ioz_avolume' : volume,'ioz_file size_kB': int(data[0]),'ioz_reclen': int(data[1]),'ioz_write': int(data[2]),'ioz_rewrite': int(data[3]),'ioz_read': int(data[4]),'ioz_reread': int(data[5]),'ioz_random_read': int(data[6]),'ioz_random_write': int(data[7]),'ioz_bkwd_read': int(data[8]),'ioz_record_rewrite': int(data[9]), 'ioz_stride_read': int(data[10]), 'ioz_fwrite': int(data[11]),'ioz_frewrite':int(data[12]), 'ioz_fread':int(data[13]),'ioz_freread':int(data[14])}
            #print(json_export)
            #if output_json == test:
                #print(output_json)
            #    output_json = json.dumps(json_export,indent = 4, sort_keys=True )
            #else:
            #    output_json = output_json + "," + json.dumps(json_export,indent =4, sort_keys=True )
            output_json = json.dumps(json_export,indent=4,sort_keys=True)
            #print(output_json)
            req = requests.post(logging_target, output_json)
            print(req.status_code)
        #print(output_json)

        #fo.write(output_json)
        index+=1

    if re.search(pattern, line, 0):
            data_time = True

    #print(output_json)

fo.write(output_json)
fp.close()
fo.close()


